import collections

"""
   deque() - что-то вроде двухсторонней очереди, которая поддерживает поточно-ориентированные операции добавления и 
   извлечение элементов последовательности с каждой строны. 
   В связи с чем, операции эффективны сточки зрения памятии и производительности, сложность - O(1) в любом направлении.
"""

def use_deque(size):
    d = collections.deque(range(20), maxlen=size)
    print d

"""
    Списки поддерживают аналогичные операции, но они оптимизирован только для быстрых операций с последовательностями фиксированной 
    длины и требуют затрат O(n) на перемещение памяти для операций pop(0) и insert(0, v), которые изменяют как размер, 
    так и положение базового представления данных.
"""

def use_list(p, size):
    for i in range(20):
        if i < size:
            p.append(i)
        else:
            p.append(i)
            p.pop(0)       
    print p


def main():
    p = []
    size = 10
    
    use_deque(size)
    use_list(p, size)
    

if __name__ == "main":
    main()